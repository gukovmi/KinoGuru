apply from: "application.gradle"

buildscript {
    apply from: "dependencies.gradle"

    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }

    dependencies {
        classpath(classpaths.androidGradlePlugin)
        classpath(classpaths.googleServicesPlugin)
        classpath(classpaths.kotlinGradlePlugin)
    }
}

subprojects {
    if (project.name == "app") {
        apply plugin: "com.android.application"

        android {
            defaultConfig {
                applicationId "com.shellwoo.kinoguru"
                versionCode 1
                versionName "1.0"
                resConfigs "en,ru"

                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }

            buildTypes {
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
            }

            packagingOptions {
                resources {
                    excludes += "/META-INF/{AL2.0,LGPL2.1}"
                    merges += "META-INF/LICENSE.md"
                    merges += "META-INF/LICENSE-notice.md"
                }
            }
        }
    } else {
        apply plugin: "com.android.library"

        android {
            defaultConfig {
                buildConfigField "String", "FIREBASE_SERVER_CLIENT_ID", KINO_GURU_SERVER_CLIENT_ID
                buildConfigField "String", "THE_MOVIE_DB_API_KEY", THE_MOVIE_DB_API_KEY
            }
        }
    }

    apply plugin: "kotlin-android"
    apply plugin: "kotlin-kapt"

    android {
        namespace "com.shellwoo.kinoguru.${name.replace("-", ".")}"

        defaultConfig {
            compileSdk compileSdkVer
            minSdk minSdkVer
            targetSdk targetSdkVer
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_17
            targetCompatibility JavaVersion.VERSION_17
        }

        kotlinOptions {
            jvmTarget = '17'
        }
    }

    tasks.withType(Test) {
        useJUnitPlatform()
    }
}